library(swirl)
swirl()
install_from_swirl("Regression Models")
setwd("E:/Coursera")
library(swirl)
install_course_zip("swirl_courses-master.zip", multi=TRUE,
which_course="Regression Models")
swirl()
plot(child~parent, galton)
plot(jitter(child,4)~parent, galton)
regline<-lm(child~parent, galton)
regrline<-lm(child~parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
fit<-lm(child~parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic<-fit$coef[1]
ols.slope<-fit$coef[2]
lhs-rhs
all.equal(lhs, rhs)
varchild<-var(galton$child)
varChild<-var(galton$child)
varRes<-var(fit$residuals)
varEst<-var(ols.slope)
varEst<-var(est(ols.slope, ols.ic))
all.equal(varChild, varRes + varEst)
efit<-lm(accel ~ mag + dist, attenu)
mean(efit$residuals)==0
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
cor(gpa_nor, gch_nor)
2
l_nor<-lm(gch_nor ~ gpa_nor)
fit<-lm(child ~ parent, galton)
sum(fit$residuals^2/(n-2))
sqrt(sum(fit$residuals^2/(n-2)))
sqrt(sum((fit$residuals^2)/(n-2)))
sqrt(sum(fit$residuals^2) / (n - 2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2)))
sqrt(deviance(fit)/(n-2))
mu<-mean(galton$child)
sTot<-sum(galton$child - mu)
sTot<-sum((galton$child - mu)^2)
sRes<-sum(deviance(sTot))
sRes<-sum(deviance(galton$child))
sRes<-deviance(sTot)
sRes<-deviance(galton$child)
sRes
sRes<-deviance(galton)
sRes<-deviance(fit)
1-(sRes/sTot)
1-sRes/sTot
summary(fit)$r.squared
cor(child, parent, galton)
cor(galton$child, galton$parent)
cor(galton$child, galton$parent)^2
ones<-rep(1, nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galton)
head(trees)
fit<-lm(Volume ~ Girth + Height + Constant -1, trees)
trees2<-eliminate("Girth", trees)
head(trees2)
fit2<-lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
lm(.~Fertility, swiss)
all<-lm(~.Fertility, swiss)
all<-lm(.~Fertility, data = swiss)
all<-lm(Fertility ~ ., data = swiss)
summary(all)
lm(Fertility ~ Agrigulture, swiss)
lm(Fertility ~ Agriculture, swiss)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Education, swiss$Examination)
cor(swiss$Education, swiss$Agriculture)
makelms()
ec<-sum(swiss$Examination, swiss$Catholic)
ec<-swiss$Examination + swiss$Catholic
efit<-lm(Fertility . + ec, swiss)
efit<-lm(Fertility ~ . + ec, swiss)
all$coefficients-efit$coefficients
6
dim(InsectSprays)
head(InsectSprays, 15)
sa
sA
summary(InsectSprays$spray)
summary(InsectSprays[,2])
sapply(class, InsectSprays)
sapply(InsectSprays, class)
fit<-lm(count~spray, InsectSprays)
fit$coefficients
summary(fit)$coef
est<-fit[,1]
est<-summary(fit[,1])
est<-fit[,1]
fit
est<-summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit<-lm(count ~ spray -1)
nfit<-lm(count ~ spray -1, InsectSprays)
summary(nfit)$coef
spray2<-relevel(InsectSprays$spray, "C")
fit2<-lm(count ~ spray,spray2)
fit2<-lm(spray2)
spray2
fit2<-lm(count ~ spray2, InsectSprays)
summary(fit2)
summary(fit2)$coef
mean(sC)
(fit$coef[2]-fit$coefs[3])/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(x~y)
lm(y~x)
lm(y~x)$coef
coef(summary(lm(y~x)))
summary(fit)
summary(lm(y~x))
fit<-lm(y~x)
fit$sigma
summary(fit)$sigma
data("mtcars")
data("mtcars")
data(mtcars)
fit<-lm(mpg ~ weight, mtcars)
View(mtcars)
fit<-lm(mpg ~ wt, mtcars)
summary(fit)$conf
summary(fit)
predict(fit, newdata = data.frame(x = mean(fit$wt)), interval = ("cofidence"))
predict(fit, newdata = data.frame(x=mean(mtcars$wt)), interval = ("confidence"))
data(mtcars)
x<-mtcars$mpg
y<-mtcars$wt
fit<-lm(x ~ y, mtcars)
summary(fit)
predict(fit, newdata = data.frame(x = mean(x)), interval = ("confidence"))
data(mtcars)
y <- mtcars$mpg
x <- mtcars$wt
fit_car <- lm(y ~ x)
predict(fit_car, newdata = data.frame(x = mean(x)), interval = ("confidence"))
predict(fit, newdata = data.frame(x=mean(mtcars$wt)), interval = ("confidence"))
?mtcars
predict(fit_car, newdata = data.frame(x = 3), interval = ("prediction"))
predict(fit_car, newdata = data.frame(x = 3/2), interval = ("prediction"))
predict(fit_car, newdata = data.frame(x = 3/2), interval = ("confidence"))
predict(fit_car, newdata = data.frame(x = x/2), interval = ("confidence"))
predict(fit_car, newdata = data.frame(x = mean(x/2)), interval = ("confidence"))
predict(fit_car, newdata = data.frame(x = mean(x)/2), interval = ("confidence"))
predict(fit_car, newdata = data.frame(x = mean(x)/2), interval = ("prediction"))
data(mtcars)
y <- mtcars$mpg
x <- mtcars$wt
fit_car <- lm(y ~ x)
predict(fit_car, newdata = data.frame(x = mean(x)), interval = ("confidence"))
predict(fit_car, newdata = data.frame(x = 3), interval = ("prediction"))
predict(fit_car, newdata = data.frame(x = mean(x)/2), interval = ("prediction"))
fit_car2<-lm(y ~ I(x/2))
sumCeof2<-coef(summary(fit_car2))
(sumCeof2[2,1] + c(-1, 1) * qt(p = .975, df=fit_car2$df) * sumCeof2[2,2])
(sumCeof2[2,1] + c(-1, 1) * qt(p = .975, df=fit_car2$df) * sumCeof2[2,2])
fit_car2<-lm(y ~ I(x/2))
sumCeof2<-coef(summary(fit_car2))
(sumCeof2[2,1] + c(-1, 1) * qt(p = .975, df=fit_car2$df) * sumCeof2[2,2])
(sumCeof2[2,1] + c(-1, 1) * qt(p = .975, df=fit_car2$df) * sumCeof2[2,2])
?I
summary(fit_car2)$coef
qt(p=.975, df=fit_car2$df)
qt(p=.975, df=fit_car2$df.residual)
2.04227*1.1182
-2.283666 +-10.68894
data(mtcars)
y <- mtcars$mpg
x <- mtcars$wt
fit_car <- lm(y ~ x)
sum(resid(fit_car)^2) / sum((y - mean(y)) ^ 2)
shiny::runApp('Data_Products/shootingsUS')
?iframe
??iframe
shiny::runApp('Data_Products/shootingsUS')
setwd("D:/Coursera/Data_Products/shootingsUS")
shiny::runApp()
?leaflet
shiny::runApp()
